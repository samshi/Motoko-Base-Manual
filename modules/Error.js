modules.Error={"imports":{"mo:â›”":"Prim"},"functions":{"Error":{"desc":"Error values resulting from  `async` computations","body":"public type Error= Prim.Types.Error;"},"ErrorCode":{"desc":"// Error codes (user and system), where module `Prim` defines:\n```motoko\ntype ErrorCode = {\nFatal error.\n  #system_fatal;\nTransient error.\n  #system_transient;\nDestination invalid.\n  #destination_invalid;\nExplicit reject by canister code.\n  #canister_reject;\nCanister trapped.\n  #canister_error;\nFuture error code (with unrecognized numeric code)\n  #future : Nat32;\n};\n```","body":"public type ErrorCode= Prim.ErrorCode;"},"reject":{"desc":"// Create an error from message `m` with code #canister_reject.","body":"public let reject: (m : Text) -> Error = Prim.error;"},"code":{"desc":"// Returns the code of an error `e`.","body":"public let code: (e : Error) -> ErrorCode = Prim.errorCode;"},"message":{"desc":"// Returns the message of an error `e`.","body":"public let message: (e : Error) -> Text = Prim.errorMessage;"}},"other":"","test":""}